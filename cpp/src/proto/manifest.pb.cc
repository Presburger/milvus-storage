// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: manifest.proto

#include "manifest.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_manifest_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_manifest_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SpaceOption;
}  // namespace protobuf_manifest_2eproto
namespace protobuf_schema_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_schema_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Schema;
}  // namespace protobuf_schema_2eproto
namespace manifest {
class SpaceOptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpaceOption>
      _instance;
} _SpaceOption_default_instance_;
class ManifestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Manifest>
      _instance;
} _Manifest_default_instance_;
}  // namespace manifest
namespace protobuf_manifest_2eproto {
static void InitDefaultsSpaceOption() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::manifest::_SpaceOption_default_instance_;
    new (ptr) ::manifest::SpaceOption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::manifest::SpaceOption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SpaceOption =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSpaceOption}, {}};

static void InitDefaultsManifest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::manifest::_Manifest_default_instance_;
    new (ptr) ::manifest::Manifest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::manifest::Manifest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Manifest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsManifest}, {
      &protobuf_manifest_2eproto::scc_info_SpaceOption.base,
      &protobuf_schema_2eproto::scc_info_Schema.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SpaceOption.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Manifest.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::SpaceOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::SpaceOption, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::SpaceOption, primary_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::SpaceOption, version_column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::SpaceOption, vector_column_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::Manifest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::Manifest, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::Manifest, schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::Manifest, scalar_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::Manifest, vector_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::manifest::Manifest, delete_files_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::manifest::SpaceOption)},
  { 9, -1, sizeof(::manifest::Manifest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::manifest::_SpaceOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::manifest::_Manifest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "manifest.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016manifest.proto\022\010manifest\032\014schema.proto"
      "\"b\n\013SpaceOption\022\014\n\004path\030\001 \001(\t\022\026\n\016primary"
      "_column\030\002 \001(\t\022\026\n\016version_column\030\003 \001(\t\022\025\n"
      "\rvector_column\030\004 \001(\t\"\224\001\n\010Manifest\022&\n\007opt"
      "ions\030\001 \001(\0132\025.manifest.SpaceOption\022\036\n\006sch"
      "ema\030\002 \001(\0132\016.schema.Schema\022\024\n\014scalar_file"
      "s\030\003 \003(\t\022\024\n\014vector_files\030\004 \003(\t\022\024\n\014delete_"
      "files\030\005 \003(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 299);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "manifest.proto", &protobuf_RegisterTypes);
  ::protobuf_schema_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_manifest_2eproto
namespace manifest {

// ===================================================================

void SpaceOption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpaceOption::kPathFieldNumber;
const int SpaceOption::kPrimaryColumnFieldNumber;
const int SpaceOption::kVersionColumnFieldNumber;
const int SpaceOption::kVectorColumnFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpaceOption::SpaceOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manifest_2eproto::scc_info_SpaceOption.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:manifest.SpaceOption)
}
SpaceOption::SpaceOption(const SpaceOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.path().size() > 0) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  primary_column_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.primary_column().size() > 0) {
    primary_column_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_column_);
  }
  version_column_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_column().size() > 0) {
    version_column_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_column_);
  }
  vector_column_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vector_column().size() > 0) {
    vector_column_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vector_column_);
  }
  // @@protoc_insertion_point(copy_constructor:manifest.SpaceOption)
}

void SpaceOption::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_column_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_column_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vector_column_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SpaceOption::~SpaceOption() {
  // @@protoc_insertion_point(destructor:manifest.SpaceOption)
  SharedDtor();
}

void SpaceOption::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_column_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_column_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vector_column_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SpaceOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SpaceOption::descriptor() {
  ::protobuf_manifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpaceOption& SpaceOption::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manifest_2eproto::scc_info_SpaceOption.base);
  return *internal_default_instance();
}


void SpaceOption::Clear() {
// @@protoc_insertion_point(message_clear_start:manifest.SpaceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  primary_column_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_column_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vector_column_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SpaceOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manifest.SpaceOption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.SpaceOption.path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string primary_column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_primary_column()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->primary_column().data(), static_cast<int>(this->primary_column().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.SpaceOption.primary_column"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version_column = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_column()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_column().data(), static_cast<int>(this->version_column().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.SpaceOption.version_column"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vector_column = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vector_column()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vector_column().data(), static_cast<int>(this->vector_column().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.SpaceOption.vector_column"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manifest.SpaceOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manifest.SpaceOption)
  return false;
#undef DO_
}

void SpaceOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manifest.SpaceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // string primary_column = 2;
  if (this->primary_column().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_column().data(), static_cast<int>(this->primary_column().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.primary_column");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->primary_column(), output);
  }

  // string version_column = 3;
  if (this->version_column().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_column().data(), static_cast<int>(this->version_column().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.version_column");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version_column(), output);
  }

  // string vector_column = 4;
  if (this->vector_column().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vector_column().data(), static_cast<int>(this->vector_column().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.vector_column");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vector_column(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manifest.SpaceOption)
}

::google::protobuf::uint8* SpaceOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manifest.SpaceOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // string primary_column = 2;
  if (this->primary_column().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->primary_column().data(), static_cast<int>(this->primary_column().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.primary_column");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->primary_column(), target);
  }

  // string version_column = 3;
  if (this->version_column().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_column().data(), static_cast<int>(this->version_column().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.version_column");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version_column(), target);
  }

  // string vector_column = 4;
  if (this->vector_column().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vector_column().data(), static_cast<int>(this->vector_column().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.SpaceOption.vector_column");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vector_column(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manifest.SpaceOption)
  return target;
}

size_t SpaceOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manifest.SpaceOption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  // string primary_column = 2;
  if (this->primary_column().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->primary_column());
  }

  // string version_column = 3;
  if (this->version_column().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_column());
  }

  // string vector_column = 4;
  if (this->vector_column().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vector_column());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpaceOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manifest.SpaceOption)
  GOOGLE_DCHECK_NE(&from, this);
  const SpaceOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpaceOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manifest.SpaceOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manifest.SpaceOption)
    MergeFrom(*source);
  }
}

void SpaceOption::MergeFrom(const SpaceOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manifest.SpaceOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {

    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  if (from.primary_column().size() > 0) {

    primary_column_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.primary_column_);
  }
  if (from.version_column().size() > 0) {

    version_column_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_column_);
  }
  if (from.vector_column().size() > 0) {

    vector_column_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vector_column_);
  }
}

void SpaceOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manifest.SpaceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpaceOption::CopyFrom(const SpaceOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manifest.SpaceOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpaceOption::IsInitialized() const {
  return true;
}

void SpaceOption::Swap(SpaceOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpaceOption::InternalSwap(SpaceOption* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  primary_column_.Swap(&other->primary_column_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_column_.Swap(&other->version_column_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vector_column_.Swap(&other->vector_column_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SpaceOption::GetMetadata() const {
  protobuf_manifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Manifest::InitAsDefaultInstance() {
  ::manifest::_Manifest_default_instance_._instance.get_mutable()->options_ = const_cast< ::manifest::SpaceOption*>(
      ::manifest::SpaceOption::internal_default_instance());
  ::manifest::_Manifest_default_instance_._instance.get_mutable()->schema_ = const_cast< ::schema::Schema*>(
      ::schema::Schema::internal_default_instance());
}
void Manifest::clear_schema() {
  if (GetArenaNoVirtual() == NULL && schema_ != NULL) {
    delete schema_;
  }
  schema_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Manifest::kOptionsFieldNumber;
const int Manifest::kSchemaFieldNumber;
const int Manifest::kScalarFilesFieldNumber;
const int Manifest::kVectorFilesFieldNumber;
const int Manifest::kDeleteFilesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Manifest::Manifest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_manifest_2eproto::scc_info_Manifest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:manifest.Manifest)
}
Manifest::Manifest(const Manifest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scalar_files_(from.scalar_files_),
      vector_files_(from.vector_files_),
      delete_files_(from.delete_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_options()) {
    options_ = new ::manifest::SpaceOption(*from.options_);
  } else {
    options_ = NULL;
  }
  if (from.has_schema()) {
    schema_ = new ::schema::Schema(*from.schema_);
  } else {
    schema_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:manifest.Manifest)
}

void Manifest::SharedCtor() {
  ::memset(&options_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&schema_) -
      reinterpret_cast<char*>(&options_)) + sizeof(schema_));
}

Manifest::~Manifest() {
  // @@protoc_insertion_point(destructor:manifest.Manifest)
  SharedDtor();
}

void Manifest::SharedDtor() {
  if (this != internal_default_instance()) delete options_;
  if (this != internal_default_instance()) delete schema_;
}

void Manifest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Manifest::descriptor() {
  ::protobuf_manifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manifest_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Manifest& Manifest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_manifest_2eproto::scc_info_Manifest.base);
  return *internal_default_instance();
}


void Manifest::Clear() {
// @@protoc_insertion_point(message_clear_start:manifest.Manifest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scalar_files_.Clear();
  vector_files_.Clear();
  delete_files_.Clear();
  if (GetArenaNoVirtual() == NULL && options_ != NULL) {
    delete options_;
  }
  options_ = NULL;
  if (GetArenaNoVirtual() == NULL && schema_ != NULL) {
    delete schema_;
  }
  schema_ = NULL;
  _internal_metadata_.Clear();
}

bool Manifest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:manifest.Manifest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .manifest.SpaceOption options = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .schema.Schema schema = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string scalar_files = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_scalar_files()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scalar_files(this->scalar_files_size() - 1).data(),
            static_cast<int>(this->scalar_files(this->scalar_files_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.Manifest.scalar_files"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string vector_files = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_vector_files()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vector_files(this->vector_files_size() - 1).data(),
            static_cast<int>(this->vector_files(this->vector_files_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.Manifest.vector_files"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string delete_files = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_delete_files()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->delete_files(this->delete_files_size() - 1).data(),
            static_cast<int>(this->delete_files(this->delete_files_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "manifest.Manifest.delete_files"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:manifest.Manifest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:manifest.Manifest)
  return false;
#undef DO_
}

void Manifest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:manifest.Manifest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manifest.SpaceOption options = 1;
  if (this->has_options()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_options(), output);
  }

  // .schema.Schema schema = 2;
  if (this->has_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_schema(), output);
  }

  // repeated string scalar_files = 3;
  for (int i = 0, n = this->scalar_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scalar_files(i).data(), static_cast<int>(this->scalar_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.Manifest.scalar_files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->scalar_files(i), output);
  }

  // repeated string vector_files = 4;
  for (int i = 0, n = this->vector_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vector_files(i).data(), static_cast<int>(this->vector_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.Manifest.vector_files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->vector_files(i), output);
  }

  // repeated string delete_files = 5;
  for (int i = 0, n = this->delete_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delete_files(i).data(), static_cast<int>(this->delete_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.Manifest.delete_files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->delete_files(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:manifest.Manifest)
}

::google::protobuf::uint8* Manifest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:manifest.Manifest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .manifest.SpaceOption options = 1;
  if (this->has_options()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_options(), deterministic, target);
  }

  // .schema.Schema schema = 2;
  if (this->has_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_schema(), deterministic, target);
  }

  // repeated string scalar_files = 3;
  for (int i = 0, n = this->scalar_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scalar_files(i).data(), static_cast<int>(this->scalar_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.Manifest.scalar_files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->scalar_files(i), target);
  }

  // repeated string vector_files = 4;
  for (int i = 0, n = this->vector_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vector_files(i).data(), static_cast<int>(this->vector_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.Manifest.vector_files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->vector_files(i), target);
  }

  // repeated string delete_files = 5;
  for (int i = 0, n = this->delete_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->delete_files(i).data(), static_cast<int>(this->delete_files(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "manifest.Manifest.delete_files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->delete_files(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:manifest.Manifest)
  return target;
}

size_t Manifest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:manifest.Manifest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string scalar_files = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->scalar_files_size());
  for (int i = 0, n = this->scalar_files_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->scalar_files(i));
  }

  // repeated string vector_files = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->vector_files_size());
  for (int i = 0, n = this->vector_files_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->vector_files(i));
  }

  // repeated string delete_files = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->delete_files_size());
  for (int i = 0, n = this->delete_files_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->delete_files(i));
  }

  // .manifest.SpaceOption options = 1;
  if (this->has_options()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *options_);
  }

  // .schema.Schema schema = 2;
  if (this->has_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *schema_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Manifest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:manifest.Manifest)
  GOOGLE_DCHECK_NE(&from, this);
  const Manifest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Manifest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:manifest.Manifest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:manifest.Manifest)
    MergeFrom(*source);
  }
}

void Manifest::MergeFrom(const Manifest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:manifest.Manifest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scalar_files_.MergeFrom(from.scalar_files_);
  vector_files_.MergeFrom(from.vector_files_);
  delete_files_.MergeFrom(from.delete_files_);
  if (from.has_options()) {
    mutable_options()->::manifest::SpaceOption::MergeFrom(from.options());
  }
  if (from.has_schema()) {
    mutable_schema()->::schema::Schema::MergeFrom(from.schema());
  }
}

void Manifest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:manifest.Manifest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Manifest::CopyFrom(const Manifest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:manifest.Manifest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Manifest::IsInitialized() const {
  return true;
}

void Manifest::Swap(Manifest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Manifest::InternalSwap(Manifest* other) {
  using std::swap;
  scalar_files_.InternalSwap(CastToBase(&other->scalar_files_));
  vector_files_.InternalSwap(CastToBase(&other->vector_files_));
  delete_files_.InternalSwap(CastToBase(&other->delete_files_));
  swap(options_, other->options_);
  swap(schema_, other->schema_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Manifest::GetMetadata() const {
  protobuf_manifest_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_manifest_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace manifest
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::manifest::SpaceOption* Arena::CreateMaybeMessage< ::manifest::SpaceOption >(Arena* arena) {
  return Arena::CreateInternal< ::manifest::SpaceOption >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::manifest::Manifest* Arena::CreateMaybeMessage< ::manifest::Manifest >(Arena* arena) {
  return Arena::CreateInternal< ::manifest::Manifest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
